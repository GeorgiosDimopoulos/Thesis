People and RolesSoftware Release Tools ManualPrevChapter 1 IntroductionNext
---------------------------------------------------------------------
1.2 People and RolesIt is assumed that each software project managed with these tools has one software librarian that is responsible for the software repository as a whole. It is the job of the librarian to manage the lifetime of releases: coherent and stamped snapshots of the software. The librarian need not be responsible for all aspects of the software. In fact, there is no need for the librarian to have anything to do with the architecture, design or even the code of the software project. It does help a lot if he or she has a good understanding of the system's structure and is experienced with software development tools.&#13;In addition to the librarian each project has one or more developers who produce and modify the code. It is assumed that not all developers work with all of the software. Rather, the system is expected to be partitioned into smaller parts which we shall call packages. Each package has one main author, or coordinator, responsible for its development. Other developers may join the coordinator as peers, but they do not share the responsibilities. This subdivision of responsibilities may apply recursively so that a package may be composed of smaller packages.[1] Thus, the concept of distributed responsibility is very germane to this tool suite.&#13;Finally, there is one more category of people involved: the end users who do not develop the software but do something with it.[2] Since the Software Release Tools are directed at developers, there is little material in this manual that is of benefit to end users. Each software project must describe how its software is to be used; this should be a natural part of the documentation.&#13;One issue worth noting is that the above classifications are only roles. The coordinator of one package may be a peer developer for another package. The person wearing the software librarian's hat at one moment may take the hat of a regular developer an instant after, and the role of an end user later. The responsibilities may also shift from one person to another over the time. A package may for instance have different coordinators at different times. What really matters is that there is one coordinator for each package at any one time.&#13;Notes[1]Typically the partitioning into packages follows naturally the domain decomposition of the software project itself.[2]In the context for which these tools are developed, the users almost always run the software directly from the releases. Hence the lack of support for creating distributions.
---------------------------------------------------------------------
PrevHomeNextIntroductionUpWhat The Release Tools Provide 